{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "fe93c4e0",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>YEAR</th>\n",
       "      <th>COUNTY</th>\n",
       "      <th>HOSPITAL</th>\n",
       "      <th>OSHPDID</th>\n",
       "      <th>Procedure/Condition</th>\n",
       "      <th>Risk Adjusted Mortality Rate</th>\n",
       "      <th># of Deaths</th>\n",
       "      <th># of Cases</th>\n",
       "      <th>Hospital Ratings</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2016</td>\n",
       "      <td>AAAA</td>\n",
       "      <td>STATEWIDE</td>\n",
       "      <td>None</td>\n",
       "      <td>AAA Repair Unruptured</td>\n",
       "      <td>1.3</td>\n",
       "      <td>30</td>\n",
       "      <td>2358</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2016</td>\n",
       "      <td>AAAA</td>\n",
       "      <td>STATEWIDE</td>\n",
       "      <td>None</td>\n",
       "      <td>AMI</td>\n",
       "      <td>6.1</td>\n",
       "      <td>3178</td>\n",
       "      <td>52167</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2016</td>\n",
       "      <td>AAAA</td>\n",
       "      <td>STATEWIDE</td>\n",
       "      <td>None</td>\n",
       "      <td>Acute Stroke</td>\n",
       "      <td>9.1</td>\n",
       "      <td>5482</td>\n",
       "      <td>60184</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2016</td>\n",
       "      <td>AAAA</td>\n",
       "      <td>STATEWIDE</td>\n",
       "      <td>None</td>\n",
       "      <td>Acute Stroke Hemorrhagic</td>\n",
       "      <td>21.1</td>\n",
       "      <td>2580</td>\n",
       "      <td>12210</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2016</td>\n",
       "      <td>AAAA</td>\n",
       "      <td>STATEWIDE</td>\n",
       "      <td>None</td>\n",
       "      <td>Acute Stroke Ischemic</td>\n",
       "      <td>5</td>\n",
       "      <td>2258</td>\n",
       "      <td>45141</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57649</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>Heart Failure</td>\n",
       "      <td>3.6</td>\n",
       "      <td>23</td>\n",
       "      <td>712</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57650</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>Hip Fracture</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>167</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57651</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>PCI</td>\n",
       "      <td>4.3</td>\n",
       "      <td>7</td>\n",
       "      <td>146</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57652</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>Pancreatic Resection</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57653</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>Pneumonia</td>\n",
       "      <td>11.9</td>\n",
       "      <td>46</td>\n",
       "      <td>470</td>\n",
       "      <td>Worse</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>57654 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       YEAR COUNTY                      HOSPITAL    OSHPDID  \\\n",
       "0      2016   AAAA                     STATEWIDE       None   \n",
       "1      2016   AAAA                     STATEWIDE       None   \n",
       "2      2016   AAAA                     STATEWIDE       None   \n",
       "3      2016   AAAA                     STATEWIDE       None   \n",
       "4      2016   AAAA                     STATEWIDE       None   \n",
       "...     ...    ...                           ...        ...   \n",
       "57649  2022   Yuba  Adventist Health and Rideout  106580996   \n",
       "57650  2022   Yuba  Adventist Health and Rideout  106580996   \n",
       "57651  2022   Yuba  Adventist Health and Rideout  106580996   \n",
       "57652  2022   Yuba  Adventist Health and Rideout  106580996   \n",
       "57653  2022   Yuba  Adventist Health and Rideout  106580996   \n",
       "\n",
       "            Procedure/Condition Risk Adjusted Mortality Rate # of Deaths  \\\n",
       "0         AAA Repair Unruptured                          1.3          30   \n",
       "1                           AMI                          6.1        3178   \n",
       "2                  Acute Stroke                          9.1        5482   \n",
       "3      Acute Stroke Hemorrhagic                         21.1        2580   \n",
       "4         Acute Stroke Ischemic                            5        2258   \n",
       "...                         ...                          ...         ...   \n",
       "57649             Heart Failure                          3.6          23   \n",
       "57650              Hip Fracture                            4           6   \n",
       "57651                       PCI                          4.3           7   \n",
       "57652      Pancreatic Resection                          NaN         NaN   \n",
       "57653                 Pneumonia                         11.9          46   \n",
       "\n",
       "      # of Cases Hospital Ratings    LONGITUDE   LATITUDE  \n",
       "0           2358             None         None       None  \n",
       "1          52167             None         None       None  \n",
       "2          60184             None         None       None  \n",
       "3          12210             None         None       None  \n",
       "4          45141             None         None       None  \n",
       "...          ...              ...          ...        ...  \n",
       "57649        712      As Expected  -121.593602  39.138805  \n",
       "57650        167      As Expected  -121.593602  39.138805  \n",
       "57651        146      As Expected  -121.593602  39.138805  \n",
       "57652        NaN              NaN  -121.593602  39.138805  \n",
       "57653        470            Worse  -121.593602  39.138805  \n",
       "\n",
       "[57654 rows x 11 columns]"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv(\"CMSC320_FinalProj_Database.csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "83707dcf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "OVERALL MEAN: 6.789885422240263\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>YEAR</th>\n",
       "      <th>COUNTY</th>\n",
       "      <th>HOSPITAL</th>\n",
       "      <th>OSHPDID</th>\n",
       "      <th>Procedure/Condition</th>\n",
       "      <th>Risk Adjusted Mortality Rate</th>\n",
       "      <th># of Deaths</th>\n",
       "      <th># of Cases</th>\n",
       "      <th>Hospital Ratings</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2016</td>\n",
       "      <td>AAAA</td>\n",
       "      <td>STATEWIDE</td>\n",
       "      <td>None</td>\n",
       "      <td>Espophageal Resection</td>\n",
       "      <td>3.9</td>\n",
       "      <td>11</td>\n",
       "      <td>281</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2016</td>\n",
       "      <td>AAAA</td>\n",
       "      <td>STATEWIDE</td>\n",
       "      <td>None</td>\n",
       "      <td>Pancreatic Cancer</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>1021</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2016</td>\n",
       "      <td>Alameda</td>\n",
       "      <td>Alameda Hospital</td>\n",
       "      <td>106010735</td>\n",
       "      <td>AAA Repair Unruptured</td>\n",
       "      <td>.</td>\n",
       "      <td>10</td>\n",
       "      <td>.</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-122.253991</td>\n",
       "      <td>37.76266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2016</td>\n",
       "      <td>Alameda</td>\n",
       "      <td>Alameda Hospital</td>\n",
       "      <td>106010735</td>\n",
       "      <td>AMI</td>\n",
       "      <td>16.1</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-122.253991</td>\n",
       "      <td>37.76266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2016</td>\n",
       "      <td>Alameda</td>\n",
       "      <td>Alameda Hospital</td>\n",
       "      <td>106010735</td>\n",
       "      <td>Acute Stroke</td>\n",
       "      <td>23.6</td>\n",
       "      <td>9</td>\n",
       "      <td>74</td>\n",
       "      <td>Worse</td>\n",
       "      <td>-122.253991</td>\n",
       "      <td>37.76266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57647</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>Carotid Endarterectomy</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57648</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>GI Hemorrhage</td>\n",
       "      <td>2.5</td>\n",
       "      <td>6</td>\n",
       "      <td>247</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57650</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>Hip Fracture</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>167</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57651</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>PCI</td>\n",
       "      <td>4.3</td>\n",
       "      <td>7</td>\n",
       "      <td>146</td>\n",
       "      <td>As Expected</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57652</th>\n",
       "      <td>2022</td>\n",
       "      <td>Yuba</td>\n",
       "      <td>Adventist Health and Rideout</td>\n",
       "      <td>106580996</td>\n",
       "      <td>Pancreatic Resection</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-121.593602</td>\n",
       "      <td>39.138805</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>54199 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       YEAR   COUNTY                      HOSPITAL    OSHPDID  \\\n",
       "7      2016     AAAA                     STATEWIDE       None   \n",
       "12     2016     AAAA                     STATEWIDE       None   \n",
       "16     2016  Alameda              Alameda Hospital  106010735   \n",
       "17     2016  Alameda              Alameda Hospital  106010735   \n",
       "18     2016  Alameda              Alameda Hospital  106010735   \n",
       "...     ...      ...                           ...        ...   \n",
       "57647  2022     Yuba  Adventist Health and Rideout  106580996   \n",
       "57648  2022     Yuba  Adventist Health and Rideout  106580996   \n",
       "57650  2022     Yuba  Adventist Health and Rideout  106580996   \n",
       "57651  2022     Yuba  Adventist Health and Rideout  106580996   \n",
       "57652  2022     Yuba  Adventist Health and Rideout  106580996   \n",
       "\n",
       "          Procedure/Condition Risk Adjusted Mortality Rate  # of Deaths  \\\n",
       "7       Espophageal Resection                          3.9           11   \n",
       "12          Pancreatic Cancer                            2           20   \n",
       "16      AAA Repair Unruptured                            .           10   \n",
       "17                        AMI                         16.1            3   \n",
       "18               Acute Stroke                         23.6            9   \n",
       "...                       ...                          ...          ...   \n",
       "57647  Carotid Endarterectomy                            0            0   \n",
       "57648           GI Hemorrhage                          2.5            6   \n",
       "57650            Hip Fracture                            4            6   \n",
       "57651                     PCI                          4.3            7   \n",
       "57652    Pancreatic Resection                          NaN           10   \n",
       "\n",
       "      # of Cases Hospital Ratings    LONGITUDE   LATITUDE  \n",
       "7            281             None         None       None  \n",
       "12          1021             None         None       None  \n",
       "16             .              NaN  -122.253991   37.76266  \n",
       "17            17      As Expected  -122.253991   37.76266  \n",
       "18            74            Worse  -122.253991   37.76266  \n",
       "...          ...              ...          ...        ...  \n",
       "57647         23      As Expected  -121.593602  39.138805  \n",
       "57648        247      As Expected  -121.593602  39.138805  \n",
       "57650        167      As Expected  -121.593602  39.138805  \n",
       "57651        146      As Expected  -121.593602  39.138805  \n",
       "57652        NaN              NaN  -121.593602  39.138805  \n",
       "\n",
       "[54199 rows x 11 columns]"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fill in the missing data points with the estimated mean (10)\n",
    "df['# of Deaths'] = df['# of Deaths'].replace('.', 10).fillna(10).astype(int)\n",
    "\n",
    "# Eliminate all outliers\n",
    "df = df[(df[\"# of Deaths\"] >= df[\"# of Deaths\"].quantile(0.25) -\n",
    "         1.5 * (df[\"# of Deaths\"].quantile(0.75) - df[\"# of Deaths\"].quantile(0.25))) &\n",
    "        (df[\"# of Deaths\"] <= df[\"# of Deaths\"].quantile(0.75) +\n",
    "         1.5 * (df[\"# of Deaths\"].quantile(0.75) - df[\"# of Deaths\"].quantile(0.25)))]\n",
    "\n",
    "mean = df['# of Deaths'].mean()\n",
    "print(f\"OVERALL MEAN: {mean}\") \n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "8874e283",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overall mean deaths: 6.789885422240263\n",
      "Mean deaths due to Heart Failure: 7.253761574074074\n"
     ]
    }
   ],
   "source": [
    "d = df['# of Deaths'].mean()\n",
    "d2 = df[df['Procedure/Condition']=='Heart Failure']['# of Deaths'].mean()\n",
    "print(f\"Overall mean deaths: {d}\") # overall deaths avg (around 14)\n",
    "print(f\"Mean deaths due to Heart Failure: {d2}\") # Find the mean death rate of the \"Heart Failure\" procedure"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d846eec",
   "metadata": {},
   "source": [
    "We want to find whether the total number of inpatient deaths in California's hospitals caused by a \"Heart Failure\" procedure is the same as the overall mean death rate for all procedures with $\\alpha = 0.05$.\n",
    "$ \\\\ H_0: \\mu = 7$\n",
    "$ \\\\ H_a: \\mu > 7$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "e7d10abd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "P-value: 0.00685113860015079\n"
     ]
    }
   ],
   "source": [
    "from scipy import stats\n",
    "\n",
    "# Gets the column of deaths due to Heart Failure\n",
    "deaths = df[df['Procedure/Condition']=='Heart Failure']['# of Deaths']\n",
    "\n",
    "# The overall mean here is approximately 7 (6.789)\n",
    "pop_mean = 7\n",
    "\n",
    "t_statistic, p_value = stats.ttest_1samp(a=deaths, popmean=pop_mean, alternative='greater')\n",
    "print(\"P-value:\", p_value)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec2368c3",
   "metadata": {},
   "source": [
    "Since $p \\approx 0.007 < 0.05$, we reject $H_0$ and claim that the total number of inpatient deaths in California's hospitals caused by a \"Heart Failure\" procedure is significantly greater than the overall average of deaths ($7$)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "a31b7426",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Data visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(df[df['Procedure/Condition']=='Heart Failure']['# of Deaths'], bins=20, edgecolor='black')\n",
    "plt.title('Number of Deaths Caused by a Heart Failure Procedure')\n",
    "plt.xlabel('# of Deaths')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "60094a48",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Data visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(df['# of Deaths'], bins=20, edgecolor='black')\n",
    "plt.title('Number of Deaths Overall Caused by All Procedures')\n",
    "plt.xlabel('# of Deaths')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "643803d3",
   "metadata": {},
   "source": [
    "# Histogram analysis\n",
    "From the second histogram, we can see that the most common number of patient deaths due to hospital procedures is $10$ by a large margin. Additionally, from the first histogram, we can see that the distribution of the number of deaths has more spread than the second histogram."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "74ebc350",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MEAN WITH OUTLIERS: 15.474751086418395\n"
     ]
    }
   ],
   "source": [
    "# Calculate the mean of all entries that are not '.' or \n",
    "wrong_mean = pd.to_numeric(df['# of Deaths'], errors='coerce').mean()\n",
    "print(f\"MEAN WITH OUTLIERS: {wrong_mean}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb250460",
   "metadata": {},
   "source": [
    "The data above shows significant outliers since the mean without outliers ($\\approx$7) and the mean with outliers ($\\approx$15) are significantly different."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "aa600c19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "STATEWIDE                                         180\n",
       "Memorial Hospital of Gardena                      180\n",
       "Palmdale Regional Medical Center                  180\n",
       "Madera Community Hospital                         180\n",
       "San Mateo Medical Center                          180\n",
       "                                                 ... \n",
       "Kaiser Foundation Hospital â€“ Antioch               14\n",
       "John Muir Medical Center â€“ Concord Campus          14\n",
       "Kaiser Foundation Hospital â€“ Walnut Creek          14\n",
       "John Muir Medical Center â€“ Walnut Creek Campus     14\n",
       "Community Memorial Hospital â€“ San Buenaventura     14\n",
       "Name: HOSPITAL, Length: 530, dtype: int64"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['HOSPITAL'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba332e40",
   "metadata": {},
   "source": [
    "From the counts of each hospital above, we can see that some hospitals were very underrepresented ($14$) while many were very overrepresented ($180$)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e0b2452",
   "metadata": {},
   "source": [
    "Since the population mean is not resistant to outliers, we decided to remove all of the outliers in the dataset at the beginning before proceeding with the preliminary data analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a5b69a96",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
